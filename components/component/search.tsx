/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/uD5iKWZqctF
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState, useMemo } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Select, SelectTrigger, SelectValue, SelectContent, SelectItem } from "@/components/ui/select";
import { Table, TableHeader, TableRow, TableHead, TableBody, TableCell } from "@/components/ui/table";

export function Search() {
  const [students, setStudents] = useState([
    {
      id: "001",
      name: "John Doe",
      gender: "Male",
      dormitory: {
        building: "A",
        room: "101",
      },
      major: "Computer Science",
      grade: "2022",
      class: "1",
    },
    {
      id: "002",
      name: "Jane Smith",
      gender: "Female",
      dormitory: {
        building: "B",
        room: "201",
      },
      major: "Business Administration",
      grade: "2023",
      class: "2",
    },
    {
      id: "003",
      name: "Michael Johnson",
      gender: "Male",
      dormitory: {
        building: "C",
        room: "301",
      },
      major: "Electrical Engineering",
      grade: "2021",
      class: "3",
    },
    {
      id: "004",
      name: "Emily Brown",
      gender: "Female",
      dormitory: {
        building: "D",
        room: "401",
      },
      major: "Biology",
      grade: "2022",
      class: "1",
    },
    {
      id: "005",
      name: "David Lee",
      gender: "Male",
      dormitory: {
        building: "E",
        room: "501",
      },
      major: "Computer Science",
      grade: "2023",
      class: "2",
    },
  ]);

  const [searchTerm, setSearchTerm] = useState("");
  const [filterOptions, setFilterOptions] = useState({
    dormitoryBuilding: "",
    dormitoryRoom: "",
    major: "",
    grade: "",
    class: "",
  });

  const filteredStudents = useMemo(() => {
    return students.filter((student) => {
      const searchMatch =
        student.id.includes(searchTerm) || student.name.toLowerCase().includes(searchTerm.toLowerCase());
      const filterMatch =
        (filterOptions.dormitoryBuilding === "" || filterOptions.dormitoryBuilding === student.dormitory.building) &&
        (filterOptions.dormitoryRoom === "" || filterOptions.dormitoryRoom === student.dormitory.room) &&
        (filterOptions.major === "" || filterOptions.major === student.major) &&
        (filterOptions.grade === "" || filterOptions.grade === student.grade) &&
        (filterOptions.class === "" || filterOptions.class === student.class);
      return searchMatch && filterMatch;
    });
  }, [students, searchTerm, filterOptions]);

  const handleSearch = (e) => {
    setSearchTerm(e.target.value);
  };

  const handleFilterChange = (type, value) => {
    setFilterOptions({
      ...filterOptions,
      [type]: value,
    });
  };

  const handleResetFilters = () => {
    setFilterOptions({
      dormitoryBuilding: "",
      dormitoryRoom: "",
      major: "",
      grade: "",
      class: "",
    });
  };

  const handleAddStudent = () => {};
  const handleEditStudent = (student) => {};
  const handleDeleteStudent = (student) => {};
  const handleExportToExcel = () => {};

  return (
    <div className="flex search flex-col h-full sm:px-8 md:px-10">
      
      <div className="flex-grow bg-card bg-white dark:bg-gray-950 rounded-lg shadow-md pt-6 sm:px-8 md:px-10 flex flex-col">
      <div className="flex items-center justify-between mb-6">
        <h1 className="text-2xl font-bold">Student Information Management</h1>
        <div className="flex items-center space-x-4">
          <Button onClick={handleResetFilters}>Reset Filters</Button>
          <Button onClick={handleAddStudent}>Add Student</Button>
        </div>
      </div>
        <div className="flex items-center mb-6">
          <Input
            placeholder="Search by ID or name..."
            value={searchTerm}
            onChange={handleSearch}
            className="flex-1 mr-4"
          />
          <Button variant="outline" onClick={handleExportToExcel}>
            Export to Excel
          </Button>
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-5 gap-4 mb-6">
          <div>
            <Label>Dormitory Building</Label>
            <Select
              value={filterOptions.dormitoryBuilding}
              onValueChange={(value) => handleFilterChange("dormitoryBuilding", value)}
            >
              <SelectTrigger>
                <SelectValue placeholder="Select building" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="A">Dormitory A</SelectItem>
                <SelectItem value="B">Dormitory B</SelectItem>
                <SelectItem value="C">Dormitory C</SelectItem>
                <SelectItem value="D">Dormitory D</SelectItem>
                <SelectItem value="E">Dormitory E</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div>
            <Label>Dormitory Room</Label>
            <Select
              value={filterOptions.dormitoryRoom}
              onValueChange={(value) => handleFilterChange("dormitoryRoom", value)}
              disabled={filterOptions.dormitoryBuilding === ""}
            >
              <SelectTrigger>
                <SelectValue placeholder="Select room" />
              </SelectTrigger>
              <SelectContent>
                {filterOptions.dormitoryBuilding === "A" && (
                  <SelectItem value="101">101</SelectItem>
                )}
                {filterOptions.dormitoryBuilding === "B" && (
                  <SelectItem value="201">201</SelectItem>
                )}
                {filterOptions.dormitoryBuilding === "C" && (
                  <SelectItem value="301">301</SelectItem>
                )}
                {filterOptions.dormitoryBuilding === "D" && (
                  <SelectItem value="401">401</SelectItem>
                )}
                {filterOptions.dormitoryBuilding === "E" && (
                  <SelectItem value="501">501</SelectItem>
                )}
              </SelectContent>
            </Select>
          </div>
          <div>
            <Label>Major</Label>
            <Select value={filterOptions.major} onValueChange={(value) => handleFilterChange("major", value)}>
              <SelectTrigger>
                <SelectValue placeholder="Select major" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="Computer Science">Computer Science</SelectItem>
                <SelectItem value="Business Administration">Business Administration</SelectItem>
                <SelectItem value="Electrical Engineering">Electrical Engineering</SelectItem>
                <SelectItem value="Biology">Biology</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div>
            <Label>Grade</Label>
            <Select value={filterOptions.grade} onValueChange={(value) => handleFilterChange("grade", value)}>
              <SelectTrigger>
                <SelectValue placeholder="Select grade" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="2021">2021</SelectItem>
                <SelectItem value="2022">2022</SelectItem>
                <SelectItem value="2023">2023</SelectItem>
              </SelectContent>
            </Select>
          </div>
          <div>
            <Label>Class</Label>
            <Select value={filterOptions.class} onValueChange={(value) => handleFilterChange("class", value)}>
              <SelectTrigger>
                <SelectValue placeholder="Select class" />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="1">1</SelectItem>
                <SelectItem value="2">2</SelectItem>
                <SelectItem value="3">3</SelectItem>
              </SelectContent>
            </Select>
          </div>
        </div>
        <div className="flex-grow overflow-auto">
          <Table className="w-full">
            <TableHeader>
              <TableRow>
                <TableHead>ID</TableHead>
                <TableHead>Name</TableHead>
                <TableHead>Gender</TableHead>
                <TableHead>Dormitory</TableHead>
                <TableHead>Major</TableHead>
                <TableHead>Grade</TableHead>
                <TableHead>Class</TableHead>
                <TableHead>Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {filteredStudents.map((student) => (
                <TableRow key={student.id}>
                  <TableCell>{student.id}</TableCell>
                  <TableCell>{student.name}</TableCell>
                  <TableCell>{student.gender}</TableCell>
                  <TableCell>{student.dormitory.building}-{student.dormitory.room}</TableCell>
                  <TableCell>{student.major}</TableCell>
                  <TableCell>{student.grade}</TableCell>
                  <TableCell>{student.class}</TableCell>
                  <TableCell>
                    <div className="flex items-center gap-2">
                      <Button variant="outline" size="sm" onClick={() => handleEditStudent(student)}>
                        Edit
                      </Button>
                      <Button variant="outline" size="sm" onClick={() => handleDeleteStudent(student)}>
                        Delete
                      </Button>
                    </div>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </div>
    </div>
  );
}
